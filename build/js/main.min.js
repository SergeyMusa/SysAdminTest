// import { add } from './math.js';
// console.log(add(1, 2));
// !!!!!!!!!!!! не работает импорт впринципе и лодаш в частности
// import _ from "lodash";
// console.log(_.isEqual(1, true));
"use strict";
"use strict";

var iqFunction = function iqFunction() {
  // const htmlElement = document.documentElement;
  // const firstChildNodeH = htmlElement.firstChild;
  // const lastChildNodeH = htmlElement.lastChild;
  // console.log("htmlElement___" + htmlElement);
  // console.log("firstChildNodeH" + firstChildNodeH);
  // console.log("lastChildNodeH" + lastChildNodeH);
  // const headElement = document.head;
  // const firstChildNodeHd = headElement.firstChild;
  // const lastChildNodeHd = headElement.lastChild;
  // console.log("headElement______" + headElement);
  // console.log("firstChildNodeHd" + firstChildNodeHd);
  // console.log("lastChildNodeHd" + lastChildNodeHd);
  // const bodyElement = document.body;
  // const firstChildNodeB = bodyElement.firstChild;
  // const lastChildNodeB = bodyElement.lastChild;
  // console.log("bodyElement__________" + bodyElement);
  // console.log("firstChildNodeB" + firstChildNodeB);
  // console.log("lastChildNodeB" + lastChildNodeB);
  // return 'index'
  console.log("!!!!!!!!!!!!!!!!!!"); // setTimeout(() => {
  //     console.log(Object.keys(answerList).length);
  // }, 5000)
}; // просто прикольно резобрать 
//function A(){$c=0;foreach($_SESSION['test']['objects'] as &$o){if($o['type']==1&&isset($o['an'])&&$o['an'])$c++;}return $c;}
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

// скрипты для страницы тест
// const gulpLodash = require('gulp-lodash');
// !!!!!!!!!!!!!! пока не работает импорт, делать по другому
// подключаем библиотеку Лодаш
// const lodash = require('lodash')
// console.log(gulpLodash.isEqual(1, 2));
//
// gulpLodash('Rainbow');
var requestURL = "./json/test.json";
var request = new XMLHttpRequest();
request.open("GET", requestURL);
request.responseType = "json";
request.send();
var sysAdminTest;
var header = document.querySelector("header");
var section = document.querySelector("#top"); // userButtonTest.disabled = false;

var answerList = {};
var answerListTrue = {};
var equal = ""; // 

var arrNewForCheck = {}; //был запуск при старте страницы, соответственно этого скрипта
//имело смысл, когда несколько js файлов
// request.onload = function () {

var generationTest = function generationTest() {
  sysAdminTest = request.response;
  showTest(sysAdminTest); // testCount(sysAdminTest);
};

function populateHeader(obj) {
  // вывод сформированого заголовка
  var createH1 = document.querySelector(".rezult"); // h1.rezult

  createH1.textContent = obj.jTestSysadmin;
  header.appendChild(createH1);
  var user = document.createElement("p");
  user.textContent = "\u0422\u0435\u0441\u0442 \u043F\u0440\u043E\u0445\u043E\u0434\u0438\u0442: ".concat(localStorage.getItem('user'), " \u0438\u0437 \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438: \n        ").concat(localStorage.getItem('org'), ", \u043F\u043E\u043F\u044B\u0442\u043A\u0430 \u2116").concat(localStorage.getItem('count') || '0');
  header.appendChild(user);
}

function randomArr(arr) {
  // перемещать мессив
  arr.sort(function () {
    return Math.random() - 0.5;
  });
}

function randomObj(obj) {
  // shuffle// перемещать объект
  var newObj = {};
  var keys = Object.keys(obj);
  keys.sort(function (a, b) {
    return Math.random() - 0.5;
  });
  keys.forEach(function (x) {
    newObj[x] = obj[x];
  });
  return newObj;
}

function onChangeButtonValue(num, value) {
  answerList[num] = value;
} //  тренировочный объект


var myObject = {
  'n1': '1',
  'n2': 12,
  'n3': 3,
  n4: 4,
  n5: {
    mm1: '1001',
    mm2: '1012',
    mm3: 1003
  }
}; // в json 'numberTest'

var myArr = [];

function showTest(obj) {
  // формирование и вывод прямого теста
  var questions = obj.survey; // рандом в первый раз раз запускать пустой, второй рабочий
  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  // randomObj(myObject);
  // console.log(randomObj(myObject)); //
  // console.log(randomObj(myObject));
  // console.log(randomObj(myObject));
  // Object.keys(myObject).map(function (key, index) {
  //     myObject[key] *= 2;
  // });
  // myArr = Object.values(myObject); // этой строкой преобразуем объект в массив
  // console.log(myObject.n5);
  // console.log(myArr);
  // console.log(typeof(myObject) );

  console.log("+++++++++++++++++++++++++++");

  for (var key in myObject) {
    // delete questions[key][0] ;// ["0"];
    // console.log("key_", typeof(myObject[key]) );
    if (_typeof(myObject[key]) === 'object') {
      for (var key2 in myObject[key]) {
        // console.log("[key2_",typeof(myObject[key][key2]) );
        console.log("key2__", key2, "--", myObject[key][key2]);
      }
    } else {
      console.log("key_", key, "--", myObject[key]);
    }
  }

  console.log("--------------"); // console.log(questions.map(function (y) {return y}));
  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  // let arrNumberQwestion ; // исправить на получение из json
  //    let arrNumberQwestion = sysAdminTest.numberTest.parse({});

  function contains(arr, elem) {
    return arr.find(function (i) {
      return i === elem;
    }) != -1;
  }

  for (var i = 1; i < questions.length; i++) {
    var myArticle = document.createElement("article");
    var testNumber = document.createElement("h2");
    var testQuestion = document.createElement("h5");
    var testVariants = document.createElement("p");
    var testAnswer = document.createElement("p"); // const myList = document.createElement("ul");

    myArticle.setAttribute("class", "test");
    testNumber.textContent = questions[i].numberTest;
    testQuestion.textContent = "Вопрос: " + questions[i].question;
    testVariants.textContent = "Варианты ответов: " + questions[i].answers;
    testAnswer.textContent = "Правильный ответ: " + questions[i].right + " - " + questions[i].justification;
    var radioAnswerList = document.createElement("div");
    var variantAnswer = questions[i].answers; // !!!!!!!!!!! do there

    for (var j = 1; j < variantAnswer.length; j++) {
      // const listItem = document.createElement("li");
      var radioAnswer = document.createElement("div");
      radioAnswer.innerHTML = "<input type='radio' name='answer".concat(i, "' value='").concat(j, "' onClick='onChangeButtonValue(").concat(i, ",\n                                ").concat(j, ")'> <label for='").concat(j, "'>").concat(variantAnswer[j], "</label>");
      radioAnswerList.appendChild(radioAnswer);
    } // }
    // console.log("arrNewForCheck= "+arrNewForCheck);


    answerList[i] = 0;
    myArticle.appendChild(testNumber);
    myArticle.appendChild(testQuestion); //

    myArticle.appendChild(radioAnswerList); // myArticle.appendChild(testAnswer);   // ответ

    section.appendChild(myArticle);
  }
}

function isEqual(answerList, answerListTrue) {
  // сравнение двух объектов с подсчетом процентов
  populateHeader(sysAdminTest);
  var props1 = Object.getOwnPropertyNames(answerList);
  var props2 = Object.getOwnPropertyNames(answerListTrue);
  var evaluation = 0;
  var evaluationPoor = 49;
  var evaluationGood = 70;
  var evaluationFine = 90;
  var answerAmount = 0;
  var answerRight = 0; // delete answerListTrue["0"];

  if (props1.length !== props2.length) {
    console.log('что-то пошло не так, ответов и тестов разное кол-во'); // 

    return false;
  }

  for (var i = 0; i < props2.length; i += 1) {
    var count = props1[i];

    if (answerList[count] === answerListTrue[count]) {
      answerRight++;
    }

    answerAmount++;
  }

  evaluation = Math.round(answerRight * 100 / answerAmount);
  var itog = evaluation < evaluationPoor ? 'You stupid, go out!!!' : evaluation < evaluationGood ? 'так-себе результат' : evaluation < evaluationFine ? 'хорошие знания' : 'поздравляю, ты спец'; //!!!!!!!!!!!!!!!!!
  // for (let [key, value] of answerRight) {
  // console.log(i);
  // };

  var section = document.querySelector("#bottom"); // const testRez = document. ("h5");

  var delEl = document.querySelector('h5');
  delEl.remove();
  var testRez = document.createElement("h5"); //const testTexst = document.createTextNode("Ответ:, rez");

  testRez.textContent = "\u041F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0445 \u043E\u0442\u0432\u0435\u0442\u043E\u0432: ".concat(answerRight, ", \u0438\u0437 ").concat(answerAmount, ", \u044D\u0442\u043E ").concat(evaluation, "%, \n    \n\u0440\u0435\u0437\u044E\u043C\u0435: ").concat(itog); // console.log(answerAmount, answerRight, evaluation, '%', itog);

  section.appendChild(testRez); // section.innerHTML =

  return itog; // true;
}

function checkTest() {
  // проверка результатов теста
  userButtonTest.disabled = false; // let selectedAns = 0;
  // let questions;

  sysAdminTest.survey.map(function (item) {
    //sysAdminTest["survey"].map(item => {
    answerListTrue[item.numberTest] = item.right;
  });
  delete answerListTrue[0]; //answerListTrue["0"] // убираем парковочный ответ

  console.log("answerList____: ", answerList);
  console.log('answerListTrue: ', answerListTrue); // !!!!!!!!!!!!! делаю тут

  equal = isEqual(answerList, answerListTrue);
  console.log('isEqual_', equal);
  console.log('al=', Object.keys(answerList).length); // !!!!!!!!!!!!! делаю тут

  testCount();
  getTime(); // работает вывод всего содержимого localStorage
  // const LS = { ...localStorage };
  // console.log(LS);
  //---------------
  // localStorage.setItem(i, '0');
  //   localStorage.getItem(j) 
}

var testCount = function testCount() {
  // счетчик попыток
  var count = Number(localStorage.getItem('count')) || 0; // console.log("count_= " + count);

  count++;
  localStorage.setItem('count', count); // console.log("count= " + localStorage.getItem('count'));
}; //!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//
// правильные ответы можно выводить все вместе внизу
// потом сделать - перерисовать тест с выделением правильный


var doDelete = function doDelete() {
  // сброс счетчика тестов
  // localStorage.removeItem('count');
  localStorage.setItem('count', 0);
  console.log("count= " + localStorage.getItem('count'));
}; // }
"use strict";

// <!-- проверка ввода имени -->
// блокируем тест пока не получим имя, чтобы работала статистика
// и заносим имя в локалСторадж
// const { get } = require("lodash");
// отключаем поля ввода пока не нажат чекбокс
var checkboxClick = document.querySelector("#flexSwitchCheckDefault");

function randomInteger(min, max) {
  // получить случайное число от (min-0.5) до (max+0.5)
  var rand = min - 0.5 + Math.random() * (max - min + 1);
  return Math.round(rand);
}

function getTime() {
  var Data = new Date();
  var Year = Data.getFullYear();
  var Month = Data.getMonth();
  var Day = Data.getDate();
  var Hour = Data.getHours();
  var Minutes = Data.getMinutes();
  var Seconds = Data.getSeconds(); // Вывод

  console.log("".concat(Day, " - ").concat(Hour, ":").concat(Minutes, ":").concat(Seconds));
  var now = new Date().toLocaleTimeString();
  var utc = new Date().toJSON().slice(0, 10).replace(/-/g, '/'); // console.log("utc " + utc + "__" + now);
  // document.write(Year);
  // document.write(Month);
  // document.write(Day);
  // document.write(Hour);
  // document.write(Minutes);
  // document.write(Seconds);
}

var disableButton = function disableButton() {
  // alert( 'чекбокс выключён1' );
  userOrg.disabled = true;
  userName.disabled = true;
  userButton.disabled = true;
  document.getElementById('autorization').hidden = false;

  if (checkboxClick.checked) {
    // alert( 'чекбокс включён' );
    userName.disabled = false;
    userOrg.disabled = false;
    userButton.disabled = false; // autorization.dis = false;

    document.getElementById('autorization').hidden = true;
  }

  getTime();
}; // ------
// выбираем имя по умолчанию если не введено что-то другое и заносим в локал сторадж


var doStartTest = function doStartTest() {
  // alert( 'чекбокс выключён1' );
  var randomUser = randomInteger(100, 999);
  userName.placeholder = userName.placeholder + "_" + randomUser;
  var user = userName.placeholder;
  var org = userOrg.placeholder;

  if (userName.value !== "" && userOrg.value !== "") {
    // userName.placeholder = "Сыкло )";
    user = "\"".concat(userName.value, "\"");
    org = "\"".concat(userOrg.value, "\"");
  }

  localStorage.setItem('user', user);
  localStorage.setItem('org', org); // localStorage.setItem('timer', timer);
  // console.log(
  //   localStorage.getItem('user') + ' ' + localStorage.getItem('org')
  // );

  userButton.disabled = true;
  userButtonTest.disabled = false;
  flexSwitchCheckDefault.disabled = true;
  generationTest();
};
"use strict";

// надо сделать проверки теста:
// 1- соответствие имени ?
// 2- затраченое время
// 2-2 соответствие времени на компе и в тесте
// 2-2-3 получить место где комп по айпи и выяснить местное время
// 3- сколько раз запускали тесте
// 3-2 отсутствие коррекции локалСторадж
// 9- защита оз изменения кода на странице ?
// таймер
// добавить оценку теста +-
// средний результат
// печать результата или отправить на почту
// сделать своою выборку тестов
// форма отзывов: ошибки или предложения
// id теста, показывает количество вызовов за день(чтобы не откатывали назад - не жульничали)
var checkTestRight = function checkTestRight() {
  console.log('Right');
};