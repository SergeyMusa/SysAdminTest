// import { add } from './math.js';
// console.log(add(1, 2));
// !!!!!!!!!!!! не работает импорт впринципе и лодаш в частности
// import _ from "lodash";
// console.log(_.isEqual(1, true));
"use strict";
"use strict";

// <!-- проверка ввода имени -->
// блокируем тест пока не получим имя, чтобы работала статистика
// и заносим имя в локалСторадж
// const { get } = require("lodash");
// отключаем поля ввода пока не нажат чекбокс
var checkboxClick = document.querySelector("#flexSwitchCheckDefault");

function randomInteger(min, max) {
  // получить случайное число от (min-0.5) до (max+0.5)
  var rand = min - 0.5 + Math.random() * (max - min + 1);
  return Math.round(rand);
}

var getTime = function getTime() {
  var Data = new Date();
  var Year = Data.getFullYear();
  var Month = Data.getMonth();
  var Day = Data.getDate();
  var Hour = Data.getHours();
  var Minutes = Data.getMinutes();
  var Seconds = Data.getSeconds(); // Вывод

  console.log("".concat(Day, " - ").concat(Hour, ":").concat(Minutes, ":").concat(Seconds));
  var now = new Date().toLocaleTimeString();
  var utc = new Date().toJSON().slice(0, 10).replace(/-/g, '/'); // console.log("utc " + utc + "__" + now);
  // document.write(Year);
  // document.write(Month);
  // document.write(Day);
  // document.write(Hour);
  // document.write(Minutes);
  // document.write(Seconds);
};

var disableButton = function disableButton() {
  // alert( 'чекбокс выключён1' );
  userOrg.disabled = true;
  userName.disabled = true;
  userButton.disabled = true;
  document.getElementById('autorization').hidden = false;

  if (checkboxClick.checked) {
    // alert( 'чекбокс включён' );
    userName.disabled = false;
    userOrg.disabled = false;
    userButton.disabled = false; // autorization.dis = false;

    document.getElementById('autorization').hidden = true;
  }

  getTime();
}; // ------
// выбираем имя по умолчанию если не введено что-то другое и заносим в локал сторадж


var doStartTest = function doStartTest() {
  // alert( 'чекбокс выключён1' );
  var randomUser = randomInteger(100, 999);
  userName.placeholder = userName.placeholder + "_" + randomUser;
  var user = userName.placeholder;
  var org = userOrg.placeholder;

  if (userName.value !== "" && userOrg.value !== "") {
    // userName.placeholder = "Сыкло )";
    user = "\"".concat(userName.value, "\"");
    org = "\"".concat(userOrg.value, "\"");
  }

  localStorage.setItem('user', user);
  localStorage.setItem('org', org); // localStorage.setItem('timer', timer);
  // console.log(
  //   localStorage.getItem('user') + ' ' + localStorage.getItem('org')
  // );

  userButton.disabled = true;
  userButtonTest.disabled = false;
  flexSwitchCheckDefault.disabled = true;
  generationTest();
};
"use strict";

// надо сделать проверки теста:
// 1- соответствие имени ?
// 2- затраченое время
// 2-2 соответствие времени на компе и в тесте
// 2-2-3 получить место где комп по айпи и выяснить местное время
// 3- сколько раз запускали тесте
// 3-2 отсутствие коррекции локалСторадж
// 9- защита оз изменения кода на странице ?
// таймер
// добавить оценку теста +-
// средний результат
// печать результата или отправить на почту
// сделать своою выборку тестов
// форма отзывов: ошибки или предложения
// id теста, показывает количество вызовов за день(чтобы не откатывали назад - не жульничали)
var checkTestRight = function checkTestRight() {
  console.log('Right');
};
"use strict";

var iqFunction = function iqFunction() {// const htmlElement = document.documentElement;
  // const firstChildNodeH = htmlElement.firstChild;
  // const lastChildNodeH = htmlElement.lastChild;
  // console.log("htmlElement___" + htmlElement);
  // console.log("firstChildNodeH" + firstChildNodeH);
  // console.log("lastChildNodeH" + lastChildNodeH);
  // const headElement = document.head;
  // const firstChildNodeHd = headElement.firstChild;
  // const lastChildNodeHd = headElement.lastChild;
  // console.log("headElement______" + headElement);
  // console.log("firstChildNodeHd" + firstChildNodeHd);
  // console.log("lastChildNodeHd" + lastChildNodeHd);
  // const bodyElement = document.body;
  // const firstChildNodeB = bodyElement.firstChild;
  // const lastChildNodeB = bodyElement.lastChild;
  // console.log("bodyElement__________" + bodyElement);
  // console.log("firstChildNodeB" + firstChildNodeB);
  // console.log("lastChildNodeB" + lastChildNodeB);
  // return 'index'
};
"use strict";

// скрипты для страницы тест
// const gulpLodash = require('gulp-lodash');
// !!!!!!!!!!!!!! пока не работает импорт, делать по другому
// подключаем библиотеку Лодаш
// const lodash = require('lodash')
// console.log(gulpLodash.isEqual(1, 2));
// gulpLodash('Rainbow');
// формируем тест
var header = document.querySelector("header");
var section = document.querySelector("#top");
var questionsNumber = 2; // userButtonTest.disabled = false;

var answerList = {};
var answerListTrue = {};
var equal = "";
var requestURL = "./json/test.json";
var request = new XMLHttpRequest();
request.open("GET", requestURL);
request.responseType = "json";
request.send();
var sysAdminTest; //был запуск при старте страницы, соответственно этого скрипта
//имело смысл, когда несколько js файлов
// request.onload = function () {

var generationTest = function generationTest() {
  sysAdminTest = request.response;
  populateHeader(sysAdminTest);
  showTest(sysAdminTest);
  testCount(sysAdminTest);
  setTimeout(function () {
    console.log(Object.keys(answerList).length);
  }, 5000);
};

function populateHeader(obj) {
  var myH1 = document.createElement("h1");
  myH1.textContent = obj["jTestSysadmin"];
  header.appendChild(myH1);
  var user = document.createElement("p");
  user.textContent = 'Тест проходит: ' + localStorage.getItem('user') + ' из организации: ' + localStorage.getItem('org'); //- let intervieweeName = user.textContent =localStorage.getItem('user');
  //- let intervieweeOrg = user.textContent =localStorage.getItem('org');

  header.appendChild(user);
}

function showTest(obj) {
  var questions = obj["survey"];

  for (var i = 1; i < questions.length; i++) {
    // console.log(questions.length);
    var myArticle = document.createElement("article");
    var testNumber = document.createElement("h2");
    var testQuestion = document.createElement("h5");
    var testVariants = document.createElement("p");
    var testAnswer = document.createElement("p"); // const myList = document.createElement("ul");

    myArticle.setAttribute("class", "test3");
    testNumber.textContent = questions[i].numberTest;
    testQuestion.textContent = "Вопрос: " + questions[i].question;
    testVariants.textContent = "Варианты ответов: " + questions[i].answers;
    testAnswer.textContent = "Правильный ответ: " + questions[i].right + " - " + questions[i].justification;
    var radioAnswerList = document.createElement("div");
    var variantAnsver = questions[i].answers;

    for (var j = 1; j < variantAnsver.length; j++) {
      // const listItem = document.createElement("li");
      var radioAnswer = document.createElement("div");
      radioAnswer.innerHTML = "<input type='radio' name='answer".concat(i, "' value='").concat(j, "' onClick='onChangeButtonValue(").concat(i, ",").concat(j, ")'> <label for='").concat(j, "'>").concat(variantAnsver[j], "</label>");
      radioAnswerList.appendChild(radioAnswer);
    }

    answerList[i] = 0;
    myArticle.appendChild(testNumber);
    myArticle.appendChild(testQuestion); //

    myArticle.appendChild(radioAnswerList); // myArticle.appendChild(testAnswer);
    // ответ

    section.appendChild(myArticle); // myArticle.appendChild(myPara2);
  }
}

function onChangeButtonValue(num, value) {
  answerList[num] = value;
} //function A(){$c=0;foreach($_SESSION['test']['objects'] as &$o){if($o['type']==1&&isset($o['an'])&&$o['an'])$c++;}return $c;}
// сравнение двух объектов с подсчетом процентов


function isEqual(answerList, answerListTrue) {
  var props1 = Object.getOwnPropertyNames(answerList);
  var props2 = Object.getOwnPropertyNames(answerListTrue);
  var evaluation = 0;
  var evaluationPoor = 49;
  var evaluationGood = 70;
  var evaluationFine = 90;
  var answerAmount = 0;
  var answerRight = 0; // delete answerListTrue["0"];

  if (props1.length !== props2.length) {
    console.log('что-то пошло не так, ответов и тестов разное кол-во'); // 

    return false;
  }

  ;

  for (var i = 0; i < props2.length; i += 1) {
    var count = props1[i];

    if (answerList[count] === answerListTrue[count]) {
      answerRight++; // return false;
    }

    answerAmount++;
  }

  ; //    evaluation = Math.round(answerRight / answerRight);

  evaluation = Math.round(answerRight * 100 / answerAmount);
  var itog = evaluation < evaluationPoor ? 'You stupid, go out!!!' : evaluation < evaluationGood ? 'Poor' : evaluation < evaluationFine ? 'Good' : 'Best';
  console.log(answerAmount, answerRight, evaluation, '%', itog); //!!!!!!!!!!!!!!!!!

  var section = document.querySelector("#bottom");
  var testRez = document.createElement("h5"); //const testTexst = document.createTextNode("Ответ:, rez");
  // for (var i in answerRight) {
  // for (let [key, value] of answerRight) {
  //     console.log(value);
  //     // result += answerRight + "." + i + " = " + answerRight[i] + "<br>";

  testRez.textContent = "\"\u041E\u0442\u0432\u0435\u0442: \" ".concat(answerAmount, ", ").concat(answerRight, ", ").concat(evaluation, "%, ").concat(itog); // console.log("============");
  // }

  section.appendChild(testRez); // section.innerHTML =
  // document.insertBefore(testRez, section);

  return; // true;
}

;

function checkTest() {
  //<input type="radio" name="answer0" value="0">
  userButtonTest.disabled = false;
  var selectedAns = 0;
  var questions;
  sysAdminTest["survey"].map(function (item) {
    answerListTrue[item.numberTest] = item.right;
  });
  delete answerListTrue["0"]; // еще вариант
  // delete thisIsObject.0;

  console.log("answerList____: ", answerList);
  console.log('answerListTrue: ', answerListTrue); // !!!!!!!!!!!!! делаю тут
  // console.log('al=', answerList);

  equal = isEqual(answerList, answerListTrue);
  console.log('isEqual_', equal);
  testCount(); // работает вывод всего содержимого localStorage
  // const LS = { ...localStorage };
  // console.log(LS);
  //---------------
  // localStorage.setItem(i, '0');
  //   localStorage.getItem(j) 
  // !!!!!!!!!!!!! делаю тут
}

;

var testCount = function testCount() {
  var count = Number(localStorage.getItem('count')) || 0; // console.log("count_= " + count);

  count++; // !!!!!!!!! исправить костыль с счетчиком(проверить может уже)

  localStorage.setItem('count', count);
  console.log("count= " + localStorage.getItem('count'));
}; //
// правильные ответы можно выводить все вместе внизу
// потом сделать - перерисовать тест с выделением правильный


var doDelete = function doDelete() {
  // сброс счетчика тестов
  // localStorage.removeItem('count');
  localStorage.setItem('count', 0);
  console.log("count= " + localStorage.getItem('count'));
}; // }