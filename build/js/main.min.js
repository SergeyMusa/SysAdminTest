// import { add } from './math.js';
// console.log(add(1, 2));
// !!!!!!!!!!!! не работает импорт впринципе и лодаш в частности
// import _ from "lodash";
// console.log(_.isEqual(1, true));
"use strict";
"use strict";

var iqFunction = function iqFunction() {
  // const htmlElement = document.documentElement;
  // const firstChildNodeH = htmlElement.firstChild;
  // const lastChildNodeH = htmlElement.lastChild;
  // console.log("htmlElement___" + htmlElement);
  // console.log("firstChildNodeH" + firstChildNodeH);
  // console.log("lastChildNodeH" + lastChildNodeH);
  // const headElement = document.head;
  // const firstChildNodeHd = headElement.firstChild;
  // const lastChildNodeHd = headElement.lastChild;
  // console.log("headElement______" + headElement);
  // console.log("firstChildNodeHd" + firstChildNodeHd);
  // console.log("lastChildNodeHd" + lastChildNodeHd);
  // const bodyElement = document.body;
  // const firstChildNodeB = bodyElement.firstChild;
  // const lastChildNodeB = bodyElement.lastChild;
  // console.log("bodyElement__________" + bodyElement);
  // console.log("firstChildNodeB" + firstChildNodeB);
  // console.log("lastChildNodeB" + lastChildNodeB);
  // return 'index'
  console.log("!!!!!!!!!!!!!!!!!!"); // setTimeout(() => {
  //     console.log(Object.keys(answerList).length);
  // }, 5000)
}; // просто прикольно after резобрать fun 
//function A(){$c=0;foreach($_SESSION['test']['objects'] as &$o){if($o['type']==1&&isset($o['an'])&&$o['an'])$c++;}return $c;}
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ниже набор разных функций, писал походу, но потом не понадобились
// function sortStrArr(arr) { //сотрируем строковый массив
//     arr.sort();
//     return arr;
// }
// function sortNumArr(arr) { //сотрируем числовой массив
//     arr.sort(compareNum);
//     function compareNum (a, b) {
//         return a - b;
//     }
//     return arr;
// }
// function lengthObj(Obj) { //old`s длина объекта
//     let counter = 0;
//     for (let key in Obj) {
//         counter ++;
//     }
//     return counter;
// }
// function lengthObj2(Obj) {   //длина объекта
//     return Object.keys(Obj).length;
// }
// function contains(arr, elem) {   //поиск элемента в массиве
//     return arr.find((i) => i === elem) != -1;
// }
// const {mm1} = myObject.n5; // get block from obj
// Object.keys(myObject).map(function (key, index) {
//     myObject[key] *= 2;
// });
// myArr = Object.values(myObject); // этой строкой преобразуем объект в массив
// работает вывод всего содержимого localStorage
// const LS = { ...localStorage };
// console.log(LS);
//---------------
// localStorage.setItem(i, '0');
//   localStorage.getItem(j)
"use strict";

// скрипты для страницы тест
// !!!!!!!!!!!!!! пока не работает импорт, делать по другому
// const gulpLodash = require('gulp-lodash');
//-
// const { keys } = require("lodash");
//-
// подключаем библиотеку Лодаш
// const lodash = require('lodash')
// console.log(gulpLodash.isEqual(1, 2));
// gulpLodash('Rainbow');
// const {
//     Button
// } = require("bootstrap");
var header = document.querySelector("header"),
    section = document.querySelector("#top"),
    checkerAutorize = document.querySelector('#checkerAutorize'),
    checkerOneAll = document.querySelector('#checkerOneAll'),
    btnCheckTest = document.querySelector('.btn-success'),
    //btnCheckTest
btnStartTest = document.querySelector('#btnStartTest'),
    inputUserOrg = document.querySelector('#inputUserOrg'),
    inputUserName = document.querySelector('#inputUserName');
var checkboxClick = document.querySelector("#flexSwitchCheckDefault"); // userButtonTest.disabled = false;

var answerList = {},
    answerListTrue = {};
var equal = '',
    sysAdminTest = '',
    timeBeginTest; // //  тренировочный объект
// const myObject = {
//     'n1': '1',
//     'n2': 12,
//     'n3': 3,
//     n4: 4,
//     n5: {
//         mm1: '1001',
//         mm2: '1012',
//         mm3: 1003
//     }
// }; // в json 'numberTest'
// let myArray = [1, 10, 2, 14, 20, 44, 4, 7];
//-------------------------------------------------------------------------------    
// request.onload = function () {

var requestURL = "./json/test.json",
    request = new XMLHttpRequest();
request.open("GET", requestURL);
request.responseType = "json";
request.send(); //=====NEW Promise=======================================================

var elResult = document.querySelector('#result');

function loadJson() {
  console.log("loadJson...");
  elResult.textContent = 'Идет загрузка данных...';
  return new Promise(function (resolve, reject) {
    resolve = function resolve() {
      var requestURL = "./json/test.json",
          request = new XMLHttpRequest();
      request.open("GET", requestURL);
      request.responseType = "json";
      request.send();
    };

    reject();
  }).then(function (value) {
    elResult.textContent += "\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430 \u0443\u0441\u043F\u0435\u0448\u043D\u043E \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0430 - ".concat(value);
    console.log("Загрузка успешно завершена -");
    sysAdminTest = request.response;
    showTest(sysAdminTest);
    console.log(sysAdminTest); // return;
  })["catch"](function (value) {
    elResult.textContent += "\u041E\u0448\u0438\u0431\u043A\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0438";
    console.log("Ошибка загрузки");
  })["finally"](function () {
    console.log("..."); // isProcess = false;
  });
} //============================================================


checkerAutorize.addEventListener('click', function (event) {
  togleInput();
  event.target.remove(); //-- NEW CODE
  // console.log(checkerAutorize);

  timeBeginTest = getTime();
  console.log(timeBeginTest);
});

function togleInput() {
  // thing.classlist.toggle.disabled ? true: false;
  // let isHidden = thing.classlist.disabled; 
  // console.log('hide ', isHidden);
  var alertRed = document.getElementById('autorization');

  if (checkboxClick.checked == false) {
    inputUserName.setAttribute('disabled', true);
    inputUserOrg.setAttribute('disabled', true);
    btnStartTest.disabled = true;
  } else {
    inputUserName.disabled = false;
    inputUserOrg.disabled = false;
    btnStartTest.disabled = false;
    alertRed.hidden = true;
    checkerAutorize.style.color = "black";
  }

  checkboxClick.checked = false;
}

btnStartTest.addEventListener('click', function (event) {
  //const doStartTest = () => {
  var randomUser = randomInteger(100, 999); // выбираем имя по умолчанию если не введено что-то другое и заносим в локал сторадж

  inputUserName.placeholder = inputUserName.placeholder + "_" + randomUser;
  var user = inputUserName.placeholder;
  var org = inputUserOrg.placeholder;

  if (inputUserName.value !== "" && inputUserOrg.value !== "") {
    // userName.placeholder = "Сыкло )";
    user = "\"".concat(inputUserName.value, "\"");
    org = "\"".concat(inputUserOrg.value, "\"");
  }

  localStorage.setItem('user', user);
  localStorage.setItem('org', org); // localStorage.setItem('timer', timer);
  // console.log(
  //   localStorage.getItem('user') + ' ' + localStorage.getItem('org')
  // );

  togleInput();
  btnStartTest.disabled = true;
  btnCheckTest.disabled = false; // event.target.remove();

  sysAdminTest = request.response;
  checkerOneAll.checked ? doTest(sysAdminTest, 'One') : doTest(sysAdminTest, 'All');
});
btnCheckTest.addEventListener('click', function () {
  //userButtonTest //userButtonTest
  btnCheckTest.disabled = true;
  sysAdminTest.survey.map(function (item) {
    //sysAdminTest["survey"].map(item => {
    answerListTrue[item.numberTest] = item.right;
  }); // delete answerListTrue[0]; //answerListTrue["0"] // убираем парковочный ответ ??
  // console.log("answerList____: ", answerList);
  // console.log('answerListTrue: ', answerListTrue);

  equal = isEqual(answerList, answerListTrue); // console.log('isEqual_', equal);
  // console.log('al=', Object.keys(answerList).length);

  testCount();
  getTime();
}); // ПЕРЕЛЕДАТЬ

function populateHeader(obj) {
  // вывод сформированого заголовка
  var createH1 = document.querySelector(".rezult"); // h1.rezult

  var user = document.createElement("p");
  createH1.textContent = obj.jTestSysadmin;
  header.appendChild(createH1);
  user.textContent = "\u0422\u0435\u0441\u0442 \u043F\u0440\u043E\u0445\u043E\u0434\u0438\u0442: ".concat(localStorage.getItem('user'), " \u0438\u0437 \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438: \n        ").concat(localStorage.getItem('org'), ", \u043F\u043E\u043F\u044B\u0442\u043A\u0430 \u2116").concat(localStorage.getItem('count') || '0');
  header.appendChild(user);
}

function onChangeButtonValue(num, value) {
  answerList[num] = value;
}

function lengthObj2(Obj) {
  return Object.keys(Obj).length;
}

function onChangeButtonValue2(num, value) {
  // answerList[num] = value;
  console.log(answerList[num] = value);
}

var x = 0,
    questions = '';

function randomQuestion(obj) {
  questions = obj.survey;
  var testNumberArr = []; // get all number test in Arr & randomize

  for (var key in questions) {
    // for (let i = 1; i < questions.length; i++) { 
    testNumberArr.push(questions[key].numberTest);
  }

  testNumberArr.shift(); //  del parking 0

  x = testNumberArr;
  x.sort(compareNum); // check break in number question json, else err

  function compareNum(a, b) {
    return a - b;
  }

  if (x[x.length - 1] !== x.length) {
    alert("произошла ошибка, свяжитесь с администратором admin@mail.net");
    console.log("ошибка в порядке номеров json");
    console.log("\u043E\u0436\u0438\u0434\u0430\u043B\u0441\u044F \u043D\u043E\u043C\u0435\u0440:".concat(x.length, ", \u0430 \u043F\u043E\u043B\u0443\u0447\u0435\u043D:").concat(x[x.length - 1]));
  }

  randomArr(testNumberArr); // рандом в первый раз раз запускать пустой, второй рабочий

  randomArr(testNumberArr); // console.log(testNumberArr);

  return testNumberArr;
}

function doTest(obj, how) {
  // формирование и вывод прямого теста
  randomQuestion(obj);
  console.log(x); // -------do there-------

  var myArticle = document.createElement("article"),
      testNumber = document.createElement("h2"),
      testQuestion = document.createElement("h5"),
      testVariants = document.createElement("p"),
      testAnswer = document.createElement("p"); //myList = document.createElement("ul");

  var answerList = document.createElement("div");
  var variantAnswer = '';
  myArticle.setAttribute("class", "test");

  if (how == 'All') {
    for (var i = 0; i < x.length; i++) {
      variantAnswer = questions[x[i]].answers;
      testNumber.textContent = i + 1; //отображаемый number

      testQuestion.textContent = "Вопрос: " + questions[x[i]].question;
      testVariants.textContent = "Варианты ответов: " + questions[x[i]].answers;
      testAnswer.textContent = "Правильный ответ: " + questions[x[i]].right + " - " + questions[x[i]].justification;
      showQuestion(i);
    }
  } else {
    //(how == 'One')
    var _i = 0;
    variantAnswer = questions[x[_i]].answers;
    testNumber.textContent = _i + 1; //отображаемый number

    testQuestion.textContent = "Вопрос: " + questions[x[_i]].question;
    testVariants.textContent = "Варианты ответов: " + questions[x[_i]].answers;
    testAnswer.textContent = "Правильный ответ: " + questions[x[_i]].right + " - " + questions[x[_i]].justification;
    showQuestion(_i);

    for (var _i2 = 0; _i2 < x.length; _i2++) {
      var answerButton = document.createElement("div");
      answerButton.innerHTML = "\n            <button type='button' onClick='onChangeButtonValue2(".concat(x[_i2], ")' >").concat(_i2 + 1, "</button>\n            ");
      answerList.appendChild(answerButton);
    }
  }

  function showQuestion(i) {
    for (var j = 1; j < variantAnswer.length; j++) {
      // const listItem = document.createElement("li");
      var radioAnswer = document.createElement("div");
      radioAnswer.innerHTML = "<input type='radio' name='answer".concat(x[i], "' value='").concat(j, "' onClick='onChangeButtonValue(").concat(x[i], ",\n                                        ").concat(j, ")'> <label for='").concat(j, "'>").concat(variantAnswer[j], "</label>");
      answerList.appendChild(radioAnswer);
    }

    myArticle.appendChild(testNumber);
    myArticle.appendChild(testQuestion); //

    myArticle.appendChild(answerList); // myArticle.appendChild(testAnswer);   // ответ

    section.appendChild(myArticle);
  }
}

function isEqual(answerList, answerListTrue) {
  // сравнение двух объектов с подсчетом процентов
  populateHeader(sysAdminTest);
  var props1 = Object.getOwnPropertyNames(answerList);
  var props2 = Object.getOwnPropertyNames(answerListTrue);
  var evaluation = 0;
  var evaluationPoor = 49;
  var evaluationGood = 70;
  var evaluationFine = 90;
  var answerAmount = 0;
  var answerRight = 0; // delete answerListTrue["0"];

  if (props1.length !== props2.length) {
    console.log('что-то пошло не так, ответов и тестов разное кол-во'); // 

    alert("вы ответили не на все вопросы");
    return false;
  }

  for (var i = 0; i < props2.length; i += 1) {
    var count = props1[i];

    if (answerList[count] === answerListTrue[count]) {
      answerRight++;
    }

    answerAmount++;
  }

  evaluation = Math.round(answerRight * 100 / answerAmount);
  var itog = evaluation < evaluationPoor ? 'You stupid, go out!!!' : evaluation < evaluationGood ? 'так-себе результат' : evaluation < evaluationFine ? 'хорошие знания' : 'поздравляю, ты спец'; //!!!!!!!!!!!!!!!!!
  // for (let [key, value] of answerRight) {
  // console.log(i);
  // };

  var section = document.querySelector("#bottom"); // const testRez = document. ("h5");

  var delEl = document.querySelector('h5');
  delEl.remove();
  var testRez = document.createElement("h5"); //const testTexst = document.createTextNode("Ответ:, rez");

  testRez.textContent = "\u041F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u044B\u0445 \u043E\u0442\u0432\u0435\u0442\u043E\u0432: ".concat(answerRight, ", \u0438\u0437 ").concat(answerAmount, ", \u044D\u0442\u043E ").concat(evaluation, "%, \n    \n\u0440\u0435\u0437\u044E\u043C\u0435: ").concat(itog); // console.log(answerAmount, answerRight, evaluation, '%', itog);

  section.appendChild(testRez); // section.innerHTML =

  return itog; // true;
} //====================================
//
"use strict";

// надо сделать проверки теста:
// 1- соответствие имени ?
// 2- затраченое время
// 2-2 соответствие времени на компе и в тесте
// 2-2-3 получить место где комп по айпи и выяснить местное время
// 3- сколько раз запускали тесте
// 3-2 отсутствие коррекции локалСторадж
// 9- защита оз изменения кода на странице ?
// таймер
// добавить оценку теста +-
// средний результат
// печать результата или отправить на почту
// сделать своою выборку тестов
// форма отзывов: ошибки или предложения
// id теста, показывает количество вызовов за день(чтобы не откатывали назад - не жульничали)
var checkTestRight = function checkTestRight() {
  console.log('Right');
}; //!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//
// правильные ответы можно выводить все вместе внизу
// потом сделать - перерисовать тест с выделением правильный
// 'use strict';
// const fs = require('fs');
// const loadJSON = (filepath) => {
//   return new Promise((resolve, reject) => {
//     fs.readFile(filepath, 'utf8', (err, content) => {
//       if(err) {
//         reject(err)
//       } else {
//         try {
//           resolve(JSON.parse(content));
//         } catch(err) {
//           reject(err)
//         }
//       }
//     })
//   });
// }
// loadJSON(`${__dirname}/pareto.json`)
// .then(console.log)
// .catch(console.log);
// function getJSON(url) {
//     return new Promise(function(resolve, reject) {
//         const req = https.get(url, res => {
//             let json = '';
//             res.on('data', function(chunk) { json += chunk; });
//             res.on('end', function() { resolve(JSON.parse(json)); });
//         });
//         req.on('error', function(err) { console.log(err); });
//     });
// };
// const weather = () => {
//     getJSON('yourURL')
//         .then((data) => console.log(data))
//         .catch((error) => console.error(error));
// }
"use strict";

var testCount = function testCount() {
  // счетчик попыток
  var count = Number(localStorage.getItem('count = 0')); //('count')) || 0;
  // console.log("count_= " + count);

  count++;
  localStorage.setItem('count', count); // console.log("count= " + localStorage.getItem('count'));
};

var doDelete = function doDelete() {
  // сброс счетчика тестов
  // localStorage.removeItem('count');
  localStorage.setItem('count', 0);
  console.log("count= " + localStorage.getItem('count'));
};

function randomArr(arr) {
  // перемещать мессив
  arr.sort(function () {
    return Math.random() - 0.5;
  });
}

function randomObj(obj) {
  // shuffle// перемещать объект
  var newObj = {};
  var keys = Object.keys(obj);
  keys.sort(function (a, b) {
    return Math.random() - 0.5;
  });
  keys.forEach(function (x) {
    newObj[x] = obj[x];
  });
  return newObj;
}

function randomInteger(min, max) {
  // получить случайное число от (min-0.5) до (max+0.5)
  var rand = min - 0.5 + Math.random() * (max - min + 1);
  return Math.round(rand);
}

function getTime() {
  var Data = new Date();
  var Year = Data.getFullYear();
  var Month = Data.getMonth();
  var Day = Data.getDate();
  var Hour = Data.getHours();
  var Minutes = Data.getMinutes();
  var Seconds = Data.getSeconds(); // Вывод

  console.log("".concat(Day, " - ").concat(Hour, ":").concat(Minutes, ":").concat(Seconds));
  var now = new Date().toLocaleTimeString();
  var utc = new Date().toJSON().slice(0, 10).replace(/-/g, '/'); // console.log("utc " + utc + "__" + now);
  // document.write(Year);
  // document.write(Month);
  // document.write(Day);
  // document.write(Hour);
  // document.write(Minutes);
  // document.write(Seconds);
}